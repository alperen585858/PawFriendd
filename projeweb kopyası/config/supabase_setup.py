from .supabase import supabase_admin

def create_pets_table():
    """
    Create the pets table in Supabase
    """
    try:
        # SQL query to create the pets table
        sql = """
        CREATE TABLE IF NOT EXISTS public.pets (
            id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name varchar NOT NULL,
            species varchar NOT NULL,
            breed varchar NOT NULL,
            age integer NOT NULL,
            gender varchar NOT NULL,
            description text,
            health_status text,
            is_vaccinated boolean DEFAULT false,
            is_neutered boolean DEFAULT false,
            photo_url varchar,
            status varchar DEFAULT 'available'::varchar,
            created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
            updated_at timestamp with time zone DEFAULT timezone('utc'::text, now())
        );

        -- Set up Row Level Security (RLS)
        ALTER TABLE public.pets ENABLE ROW LEVEL SECURITY;

        -- Create policies
        CREATE POLICY "Allow anonymous read access"
            ON public.pets FOR SELECT
            USING (true);

        CREATE POLICY "Allow authenticated insert"
            ON public.pets FOR INSERT
            TO authenticated
            WITH CHECK (true);

        CREATE POLICY "Allow authenticated update"
            ON public.pets FOR UPDATE
            TO authenticated
            USING (true)
            WITH CHECK (true);
        """
        
        response = supabase_admin.query(sql)
        print("Pets table created successfully")
        return True
    except Exception as e:
        print(f"Error creating pets table: {str(e)}")
        return False

def create_adoption_applications_table():
    """
    Create the adoption applications table in Supabase
    """
    try:
        # SQL query to create the adoption_applications table
        sql = """
        CREATE TABLE IF NOT EXISTS public.adoption_applications (
            id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            user_id bigint NOT NULL,
            pet_id bigint NOT NULL,
            full_name varchar NOT NULL,
            email varchar NOT NULL,
            phone varchar NOT NULL,
            address text NOT NULL,
            has_pets boolean DEFAULT false,
            current_pets text,
            reason text NOT NULL,
            status varchar DEFAULT 'pending'::varchar,
            created_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
            updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()),
            FOREIGN KEY (pet_id) REFERENCES public.pets(id) ON DELETE CASCADE
        );

        -- Set up Row Level Security (RLS)
        ALTER TABLE public.adoption_applications ENABLE ROW LEVEL SECURITY;

        -- Create policies
        CREATE POLICY "Allow authenticated read own applications"
            ON public.adoption_applications FOR SELECT
            TO authenticated
            USING (auth.uid() = user_id);

        CREATE POLICY "Allow authenticated insert own applications"
            ON public.adoption_applications FOR INSERT
            TO authenticated
            WITH CHECK (auth.uid() = user_id);

        CREATE POLICY "Allow authenticated update own applications"
            ON public.adoption_applications FOR UPDATE
            TO authenticated
            USING (auth.uid() = user_id)
            WITH CHECK (auth.uid() = user_id);
        """
        
        response = supabase_admin.query(sql)
        print("Adoption applications table created successfully")
        return True
    except Exception as e:
        print(f"Error creating adoption applications table: {str(e)}")
        return False

def setup_database():
    """
    Set up all necessary tables in Supabase
    """
    create_pets_table()
    create_adoption_applications_table() 